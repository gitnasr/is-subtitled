# this is a example for action taking when version.py in main branch changed only.
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-requirements:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Update requirements
        run: |
          pip freeze > requirements.txt
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b update-requirements
          git add requirements.txt
          git commit -m "Auto-update requirements.txt"
          git push origin update-requirements

      - name: Check for new commits
        run: |
          if git diff --quiet main..update-requirements; then
            echo "No new commits to create a pull request."
            exit 0
          fi

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "Update requirements.txt" --body "This is an automated pull request to update requirements.txt" --base main --head update-requirements

  pyinstaller-build:
    runs-on: windows-latest
    steps:
      - name: Dep
        uses: zehengl/refresh-python-dependency@v0.4.2

      - name: Build and Release
        uses: kentsx/Python2Exe@v1.1.1
        with:
          main: main
          exe_name: "IS Subtitled"
          artifact: false
          release: true
